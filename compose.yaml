services:
  app-a:
    image: pauloaragaodev/app-telemetria:v1
    build: 
      context: ./src
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_NAME=app-a
      #- APP_URL_DESTINO=http://app-b:8000,http://app-c:8000
      - APP_ERRORS=5
      - APP_LATENCY=100
      - OTLP_ENDPOINT=http://otel-collector:4318
    networks:
      - app-network
    depends_on:
      - otel-collector 

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"  # UI
      - "14250:14250"  # Model used by collector
      - "14268:14268"  # HTTP accept directly from clients
      - "6831:6831/udp"  # Accept jaeger.thrift in compact Thrift protocol over UDP
      - "6832:6832/udp"  # Accept jaeger.thrift in binary Thrift protocol over UDP
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - app-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - app-network

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app-network
  
  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        - name: Jaeger
          type: jaeger
          access: proxy
          orgId: 1
          url: http://jaeger:16686
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
          uid: jaeger
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
          uid: prometheus
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - app-network    
    depends_on:
      - loki
      - jaeger
      - prometheus    

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.128.0
    command: ["--config", "/etc/otel-collector-config.yaml"]
    volumes:
      - ./.docker/collector.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4318:4318"
      - "4317:4317"
      - "8889:8889"
    networks:
      - app-network
    depends_on:
      - jaeger
      - prometheus
      - loki
      - grafana

networks:
  app-network:
    driver: bridge